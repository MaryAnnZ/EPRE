#version 330 core
layout (location = 0) in vec3 vertexPosition_modelspace;
layout (location = 1) in vec3 vertexNormal_modelspace;
layout (location = 2) in vec2 vertexUV;

out vec2 UV;
out vec3 Normal_cameraspace;
out vec3 vertexPosition_cameraspace;

uniform mat4 M;
uniform mat4 V;
uniform mat4 P;

void main()
{
    vertexPosition_cameraspace = vec3(M * vec4(vertexPosition_modelspace, 1.0f));
    UV = vertexUV;
    
    Normal_cameraspace = transpose(inverse(mat3(M))) * vertexNormal_modelspace;

    gl_Position = P * V * M * vec4(vertexPosition_modelspace, 1.0);
}